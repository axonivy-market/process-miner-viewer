pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '5'))
  }

  triggers {
    cron '@midnight'
  }

  parameters {
    string(name: 'engineSource', defaultValue: 'https://product.ivyteam.io/', description: 'Engine page url')
  }

  stages {
    stage('Build') {
      steps {
        script {
          catchError(buildResult: 'UNSTABLE', stageResult: 'UNSTABLE') {
            docker.build('node', '-f build/Dockerfile.node .').inside {
              // sh 'npm run update:axonivy:next'
              sh 'npm run ci'
            }
          }
          archiveArtifacts artifacts: 'dist', allowEmptyArchive: true

          withChecks('ESLint') {
            recordIssues enabledForFailure: true, publishAllIssues: true, aggregatingResults: true, tools: [esLint(pattern: 'eslint.xml')], qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true]]
          }
        }
      }
    }
    stage('Integration Tests') {
      steps {
        script {
          catchError(buildResult: 'UNSTABLE', stageResult: 'UNSTABLE') {
            docker.build('node-webtest', '-f build/Dockerfile.playwright .').inside {
              dir ('tests/miner-test-project') {
                maven cmd: "-ntp verify -Dengine.page.url=${params.engineSource}"
              }
            }
          }
          archiveArtifacts artifacts: 'test-results/**', allowEmptyArchive: true
          withChecks('Integration WebTest') {
            junit testDataPublishers: [[$class: 'StabilityTestDataPublisher']], testResults: 'report.xml'
          }
        }
      }
    }
  }
  post {
    always {
      discoverGitReferenceBuild()
    }
  }
}
